---
import CodeCustom from "../CodeCustom.astro";
import CounterAlpine from "../alpinejs/CounterAlpine.html";
import CounterPreact from "../preact/CounterPreact.jsx";
import CounterReact from "../react/CounterReact.jsx";
import CounterSolid from "../solid/CounterSolid.jsx";
import CounterSvelte from "../svelte/CounterSvelte.svelte";
import CounterVue from "../vue/CounterVue.vue";
import Heading from "../Heading.astro";
import Link from "../Link.astro";
---

<div class="space-y-12">
  <hgroup class="mb-12 text-balance">
    <Heading
      level="h2"
      size="2xl"
      >Use the framework of your choice</Heading
    >
    <p>
      Fully-supported frameworks included are
      <span class="text-cyan-500">React</span>,
      <span class="text-green-500">Vue</span>,
      <span class="text-blue-500">SolidJS</span>,
      <span class="text-orange-500">Svelte</span>,
      <span class="text-violet-500">Preact</span>, and
      <span class="text-emerald-500">Alpine</span>. All you need to get started
      is install the
      <Link
        href="https://docs.astro.build/en/guides/framework-components/"
        externalLink={true}>
        integration of your choice
      </Link>
      and Astro's CLI will do the rest.*
    </p>
    <p class="text-sm mt-4">
      *This <em>are</em> extra steps when using multiple JSX frameworks like React,
      Preact, and SolidJS.
    </p>
  </hgroup>
  <div class="grid gap-24">
    <div
      id="react"
      class="border border-cyan-700 rounded-md p-4 bg-cyan-900 scroll-mt-12">
      <div class="lg:grid lg:grid-cols-4 lg:gap-4 items-center">
        <div class="col-span-1">
          <Heading
            level="h2"
            size="2xl"
            class="text-cyan-50"
            >React</Heading
          >
          <CounterReact client:visible />
        </div>
        <CodeCustom
          class="col-span-3"
          lang="jsx"
          code={`import { useState } from "react";
import MinusIconReact from "./MinusIconReact.jsx";
import PlusIconReact from "./PlusIconReact.jsx";

const CounterReact = () => {
  const [count, setCount] = useState(0);

  const increment = () => {
    setCount(count + 1);
  };

  const decrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <p className="text-lg text-cyan-50">Counter: {count}</p>
      <div className="flex gap-2">
        <button
          onClick={increment}
          className="bg-success text-success-foreground px-4 py-2 rounded-sm">
          <PlusIconReact>
            <span className="sr-only">Increase count</span>
          </PlusIconReact>
        </button>
        <button
          onClick={decrement}
          className="bg-destructive text-destructive-foreground px-4 py-2 rounded-sm">  
          <MinusIconReact>
            <span className="sr-only">Decrease count</span>
          </MinusIconReact>
        </button>
      </div>
    </div>
  );
};

export default CounterReact;

`}
        />
      </div>
    </div>

    <div
      id="vue"
      class="border border-green-700 rounded-md p-4 bg-green-900 scroll-mt-12">
      <div class="lg:grid lg:grid-cols-4 lg:gap-4 items-center">
        <div class="col-span-1">
          <Heading
            level="h2"
            size="2xl"
            class="text-green-50"
            >Vue</Heading
          >
          <CounterVue client:visible />
        </div>
        <CodeCustom
          class="col-span-3"
          lang="vue"
          code={`<script setup>
  import { ref } from "vue";
  import PlusIconVue from "./PlusIconVue.vue";
  import MinusIconVue from "./MinusIconVue.vue";

  const count = ref(0);

  const increment = () => {
    count.value++;
  };

  const decrement = () => {
    count.value--;
  };
</script>

<template>
  <div>
    <p class="text-lg text-green-50">Counter: {{ count }}</p>
    <div class="flex gap-2">
      <button
        class="bg-success text-success-foreground px-4 py-2 rounded-sm"
        @click="increment">
        <PlusIconVue>
          <span class="sr-only">Increment</span>
        </PlusIconVue>
      </button>
      <button
        class="bg-destructive text-destructive-foreground px-4 py-2 rounded-sm"
        @click="decrement">
        <MinusIconVue>
          <span class="sr-only">Decrement</span>
        </MinusIconVue>
      </button>
    </div>
  </div>
</template>


`}
        />
      </div>
    </div>
    <div
      id="svelte"
      class="border border-orange-700 rounded-md p-4 bg-orange-900 scroll-mt-12">
      <div class="lg:grid lg:grid-cols-4 lg:gap-4 items-center">
        <div class="col-span-1">
          <Heading
            level="h2"
            size="2xl"
            class="text-orange-50"
            >Svelte</Heading
          >
          <CounterSvelte client:visible />
        </div>
        <CodeCustom
          class="col-span-3"
          lang="svelte"
          code={`<script>
    import MinusIconSvelte from './MinusIconSvelte.svelte';
    import PlusIconSvelte from './PlusIconSvelte.svelte';
    
    let count = 0;

    function increment() {
        count += 1;
    }

    function decrement() {
        count -= 1;
    }
</script>

<div>
    <p class="text-lg text-orange-50">Counter: {count}</p>
    <div class="flex gap-2">
        <button on:click={increment} class="bg-success text-success-foreground px-4 py-2 rounded-sm">
            <PlusIconSvelte>
                <span class="sr-only">Increase count</span>
            </PlusIconSvelte>
        </button>
        <button on:click={decrement} class="bg-destructive text-destructive-foreground px-4 py-2 rounded-sm">
            <MinusIconSvelte>
                <span class="sr-only">Decrease count</span>
            </MinusIconSvelte>
        </button>
    </div>
</div>

`}
        />
      </div>
    </div>

    <div
      id="preact"
      class="border border-violet-700 rounded-md p-4 bg-violet-900 scroll-mt-12">
      <div class="lg:grid lg:grid-cols-4 lg:gap-4 items-center">
        <div class="col-span-1">
          <Heading
            level="h2"
            size="2xl"
            class="text-violet-50"
            >Preact</Heading
          >
          <CounterPreact client:visible />
        </div>
        <CodeCustom
          class="col-span-3"
          lang="jsx"
          code={`import { useState } from "preact/hooks";
import MinusIconPreact from "./MinusIconPreact.jsx";
import PlusIconPreact from "./PlusIconPreact.jsx";

const CounterPreact = () => {
  const [count, setCount] = useState(0);

  const increment = () => {
    setCount(count + 1);
  };

  const decrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <p className="text-lg text-violet-50">Counter: {count}</p>
      <div className="flex gap-2">
        <button
          onClick={increment}
          className="bg-success text-success-foreground px-4 py-2 rounded-sm">
          <PlusIconPreact>
            <span className="sr-only">Increase count</span>
          </PlusIconPreact>
        </button>
        <button
          onClick={decrement}
          className="bg-destructive text-destructive-foreground px-4 py-2 rounded-sm">
          <MinusIconPreact>
            <span className="sr-only">Decrease count</span>
          </MinusIconPreact>
        </button>
      </div>
    </div>
  );
};

export default CounterPreact;

`}
        />
      </div>
    </div>

    <div
      id="solid"
      class="border border-blue-700 rounded-md p-4 bg-blue-900 scroll-mt-12">
      <div class="lg:grid lg:grid-cols-4 lg:gap-4 items-center">
        <div class="col-span-1">
          <Heading
            level="h2"
            size="2xl"
            class="text-blue-50"
            >Solid</Heading
          >
          <CounterSolid client:visible />
        </div>
        <CodeCustom
          class="col-span-3"
          lang="jsx"
          code={`import { createSignal } from "solid-js";
import MinusIconSolid from "./MinusIconSolid.jsx";
import PlusIconSolid from "./PlusIconSolid.jsx";

export default function CounterSolid() {
  const [count, setCount] = createSignal(0);

  const incrementSolid = () => {
    setCount(count() + 1);
  };

  const decrementSolid = () => {
    setCount(count() - 1);
  };

  return (
    <div>
      <p className="text-lg text-blue-50">Counter: {count()}</p>
      <div className="flex gap-2">
        <button
          onClick={incrementSolid}
          className="bg-success text-success-foreground px-4 py-2 rounded-sm">
          <PlusIconSolid>
            <span className="sr-only">Increase count</span>
          </PlusIconSolid>
        </button>
        <button
          onClick={decrementSolid}
          className="bg-destructive text-destructive-foreground px-4 py-2 rounded-sm">
          <MinusIconSolid>
            <span className="sr-only">Decrease count</span>
          </MinusIconSolid>
        </button>
      </div>
    </div>
  );
}


`}
        />
      </div>
    </div>

    <div
      id="alpine"
      class="border border-emerald-700 rounded-md p-4 bg-emerald-900 scroll-mt-12">
      <div class="lg:grid lg:grid-cols-4 lg:gap-4 items-center">
        <div class="col-span-1">
          <Heading
            level="h2"
            size="2xl"
            class="text-emerald-50"
            >Alpine</Heading
          >
          <CounterAlpine client:visible />
        </div>
        <CodeCustom
          class="col-span-3"
          lang="html"
          code={`<div x-data="{ count: 0 }">
  <p class="text-lg text-emerald-50">Counter: <span x-text="count"></span></p>
  <div class="flex gap-2">
    <button
      @click="count++"
      class="bg-success text-success-foreground px-4 py-2 rounded-sm">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-plus">
        <path d="M5 12h14" />
        <path d="M12 5v14" />
        <span class="sr-only">Increase count</span>
      </svg>
    </button>
    <button
      @click="count--"
      class="bg-destructive text-destructive-foreground px-4 py-2 rounded-sm">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-minus">
        <path d="M5 12h14" />
        <span class="sr-only">Decrease count</span>
      </svg>
    </button>
  </div>
</div>

`}
        />
      </div>
    </div>
  </div>
</div>

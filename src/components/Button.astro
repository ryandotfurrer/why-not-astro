---
import clsx from "clsx";

interface Props {
 variant?:
  | "default"
  | "destructive"
  | "warning"
  | "success"
  | "outline"
  | "secondary"
  | "ghost"
  | "link";
 size?: "default" | "sm" | "lg" | "icon";
 class?: string;
}

const { variant = "default", size = "default", class: className, ...props } = Astro.props;

const buttonVariants = {
 base:
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-bold transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
 variant: {
  default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
  destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
  warning: "bg-warning text-warning-foreground shadow-sm hover:bg-warning/90",
  success: "bg-success text-success-foreground shadow-sm hover:bg-success/90",
  outline:
   "border border-border bg-background shadow-sm hover:bg-accent hover:text-foreground hover:border-foreground",
  secondary:
   "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80 hover:text-foreground",
  ghost: "hover:bg-accent hover:text-foreground",
  link: "text-primary underline-offset-4 hover:underline",
 },
 size: {
  default: "h-9 px-4 py-2",
  sm: "h-8 rounded-md px-3 text-xs",
  lg: "h-10 rounded-md px-8",
  icon: "h-9 w-9",
 },
};
---

<button
 class={clsx(
  buttonVariants.base,
  buttonVariants.variant[variant],
  buttonVariants.size[size],
  className
 )}
 {...props}
>
 <slot />
</button>
